{
  "vulnerabilities": [
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-08-23T12:24:03.151882Z",
      "credit": [
        "Toru Nagashima"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[eslint-utils](https://www.npmjs.com/package/eslint-utils) is a package provides utility functions and classes for make ESLint custom rules.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\nThe `getStaticValue` does not properly sanitize user input allowing attackers to supply malicious input that executes arbitrary code during the linting process. The `getStringIfConstant` and `getPropertyName` functions are not affected.\n\n## Remediation\n\nUpgrade `eslint-utils` to version 1.4.1 or higher.\n\n\n## References\n\n- [EsLint Release Notes](https://eslint.org/blog/2019/08/eslint-v6.2.1-released)\n\n- [GitHub Fix Commit](https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c)\n\n- [GitHub Security Advisory](https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1118)\n",
      "disclosureTime": "2019-08-20T15:17:53Z",
      "fixedIn": [
        "1.4.1"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-ESLINTUTILS-460220",
      "identifiers": {
        "CVE": [
          "CVE-2019-15657"
        ],
        "CWE": [
          "CWE-94"
        ],
        "NSP": [
          1118
        ]
      },
      "language": "js",
      "modificationTime": "2019-08-23T17:30:48.534600Z",
      "moduleName": "eslint-utils",
      "packageManager": "npm",
      "packageName": "eslint-utils",
      "patches": [],
      "publicationTime": "2019-08-23T12:24:23Z",
      "references": [
        {
          "title": "EsLint Release Notes",
          "url": "https://eslint.org/blog/2019/08/eslint-v6.2.1-released"
        },
        {
          "title": "GitHub Fix Commit",
          "url": "https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c"
        },
        {
          "title": "GitHub Security Advisory",
          "url": "https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1118"
        }
      ],
      "semver": {
        "vulnerable": [
          ">=1.2.0 <1.4.1"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "snyk-api@0.0.0-development",
        "@typescript-eslint/eslint-plugin@1.13.0",
        "eslint-utils@1.4.0"
      ],
      "upgradePath": [
        false,
        "@typescript-eslint/eslint-plugin@1.13.0",
        "eslint-utils@1.4.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "eslint-utils",
      "version": "1.4.0"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-08-23T12:24:03.151882Z",
      "credit": [
        "Toru Nagashima"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[eslint-utils](https://www.npmjs.com/package/eslint-utils) is a package provides utility functions and classes for make ESLint custom rules.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\nThe `getStaticValue` does not properly sanitize user input allowing attackers to supply malicious input that executes arbitrary code during the linting process. The `getStringIfConstant` and `getPropertyName` functions are not affected.\n\n## Remediation\n\nUpgrade `eslint-utils` to version 1.4.1 or higher.\n\n\n## References\n\n- [EsLint Release Notes](https://eslint.org/blog/2019/08/eslint-v6.2.1-released)\n\n- [GitHub Fix Commit](https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c)\n\n- [GitHub Security Advisory](https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1118)\n",
      "disclosureTime": "2019-08-20T15:17:53Z",
      "fixedIn": [
        "1.4.1"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-ESLINTUTILS-460220",
      "identifiers": {
        "CVE": [
          "CVE-2019-15657"
        ],
        "CWE": [
          "CWE-94"
        ],
        "NSP": [
          1118
        ]
      },
      "language": "js",
      "modificationTime": "2019-08-23T17:30:48.534600Z",
      "moduleName": "eslint-utils",
      "packageManager": "npm",
      "packageName": "eslint-utils",
      "patches": [],
      "publicationTime": "2019-08-23T12:24:23Z",
      "references": [
        {
          "title": "EsLint Release Notes",
          "url": "https://eslint.org/blog/2019/08/eslint-v6.2.1-released"
        },
        {
          "title": "GitHub Fix Commit",
          "url": "https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c"
        },
        {
          "title": "GitHub Security Advisory",
          "url": "https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1118"
        }
      ],
      "semver": {
        "vulnerable": [
          ">=1.2.0 <1.4.1"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "snyk-api@0.0.0-development",
        "eslint@6.1.0",
        "eslint-utils@1.4.0"
      ],
      "upgradePath": [
        false,
        "eslint@6.1.0",
        "eslint-utils@1.4.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "eslint-utils",
      "version": "1.4.0"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-08-23T12:24:03.151882Z",
      "credit": [
        "Toru Nagashima"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[eslint-utils](https://www.npmjs.com/package/eslint-utils) is a package provides utility functions and classes for make ESLint custom rules.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\nThe `getStaticValue` does not properly sanitize user input allowing attackers to supply malicious input that executes arbitrary code during the linting process. The `getStringIfConstant` and `getPropertyName` functions are not affected.\n\n## Remediation\n\nUpgrade `eslint-utils` to version 1.4.1 or higher.\n\n\n## References\n\n- [EsLint Release Notes](https://eslint.org/blog/2019/08/eslint-v6.2.1-released)\n\n- [GitHub Fix Commit](https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c)\n\n- [GitHub Security Advisory](https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1118)\n",
      "disclosureTime": "2019-08-20T15:17:53Z",
      "fixedIn": [
        "1.4.1"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-ESLINTUTILS-460220",
      "identifiers": {
        "CVE": [
          "CVE-2019-15657"
        ],
        "CWE": [
          "CWE-94"
        ],
        "NSP": [
          1118
        ]
      },
      "language": "js",
      "modificationTime": "2019-08-23T17:30:48.534600Z",
      "moduleName": "eslint-utils",
      "packageManager": "npm",
      "packageName": "eslint-utils",
      "patches": [],
      "publicationTime": "2019-08-23T12:24:23Z",
      "references": [
        {
          "title": "EsLint Release Notes",
          "url": "https://eslint.org/blog/2019/08/eslint-v6.2.1-released"
        },
        {
          "title": "GitHub Fix Commit",
          "url": "https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c"
        },
        {
          "title": "GitHub Security Advisory",
          "url": "https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1118"
        }
      ],
      "semver": {
        "vulnerable": [
          ">=1.2.0 <1.4.1"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "snyk-api@0.0.0-development",
        "eslint-plugin-node@9.1.0",
        "eslint-utils@1.4.0"
      ],
      "upgradePath": [
        false,
        "eslint-plugin-node@9.1.0",
        "eslint-utils@1.4.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "eslint-utils",
      "version": "1.4.0"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-08-23T12:24:03.151882Z",
      "credit": [
        "Toru Nagashima"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[eslint-utils](https://www.npmjs.com/package/eslint-utils) is a package provides utility functions and classes for make ESLint custom rules.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\nThe `getStaticValue` does not properly sanitize user input allowing attackers to supply malicious input that executes arbitrary code during the linting process. The `getStringIfConstant` and `getPropertyName` functions are not affected.\n\n## Remediation\n\nUpgrade `eslint-utils` to version 1.4.1 or higher.\n\n\n## References\n\n- [EsLint Release Notes](https://eslint.org/blog/2019/08/eslint-v6.2.1-released)\n\n- [GitHub Fix Commit](https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c)\n\n- [GitHub Security Advisory](https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1118)\n",
      "disclosureTime": "2019-08-20T15:17:53Z",
      "fixedIn": [
        "1.4.1"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-ESLINTUTILS-460220",
      "identifiers": {
        "CVE": [
          "CVE-2019-15657"
        ],
        "CWE": [
          "CWE-94"
        ],
        "NSP": [
          1118
        ]
      },
      "language": "js",
      "modificationTime": "2019-08-23T17:30:48.534600Z",
      "moduleName": "eslint-utils",
      "packageManager": "npm",
      "packageName": "eslint-utils",
      "patches": [],
      "publicationTime": "2019-08-23T12:24:23Z",
      "references": [
        {
          "title": "EsLint Release Notes",
          "url": "https://eslint.org/blog/2019/08/eslint-v6.2.1-released"
        },
        {
          "title": "GitHub Fix Commit",
          "url": "https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c"
        },
        {
          "title": "GitHub Security Advisory",
          "url": "https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1118"
        }
      ],
      "semver": {
        "vulnerable": [
          ">=1.2.0 <1.4.1"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "snyk-api@0.0.0-development",
        "eslint-plugin-node@9.1.0",
        "eslint-plugin-es@1.4.0",
        "eslint-utils@1.4.0"
      ],
      "upgradePath": [
        false,
        "eslint-plugin-node@9.1.0",
        "eslint-plugin-es@1.4.0",
        "eslint-utils@1.4.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "eslint-utils",
      "version": "1.4.0"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-06-19T12:04:21.040000Z",
      "credit": [
        "Snyk Security Team"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\n\nAffected versions of this package are vulnerable to Prototype Pollution.\nThe function `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nconst mergeFn = require('lodash').defaultsDeep;\r\nconst payload = '{\"constructor\": {\"prototype\": {\"a0\": true}}}'\r\n\r\nfunction check() {\r\n    mergeFn({}, JSON.parse(payload));\r\n    if (({})[`a0`] === true) {\r\n        console.log(`Vulnerable to Prototype Pollution via ${payload}`);\r\n    }\r\n  }\r\n\r\ncheck();\r\n```\r\n\r\nFor more information, check out our [blog post](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n\n## Details\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\r\n\r\nThere are two main ways in which the pollution of prototypes occurs:\r\n\r\n-   Unsafe `Object` recursive merge\r\n    \r\n-   Property definition by path\r\n    \r\n\r\n### Unsafe Object recursive merge\r\n\r\nThe logic of a vulnerable recursive merge function follows the following high-level model:\r\n```\r\nmerge (target, source)\r\n\r\n  foreach property of source\r\n\r\n    if property exists and is an object on both the target and the source\r\n\r\n      merge(target[property], source[property])\r\n\r\n    else\r\n\r\n      target[property] = source[property]\r\n```\r\n<br>  \r\n\r\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\r\n\r\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\r\n\r\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\r\n\r\n### Property definition by path\r\n\r\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\r\n\r\nIf the attacker can control the value of “path”, they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\r\n\r\n## Types of attacks\r\n\r\nThere are a few methods by which Prototype Pollution can be manipulated:\r\n\r\n| Type |Origin  |Short description |\r\n|--|--|--|\r\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\r\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\r\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\r\n\r\n## Affected environments\r\n\r\nThe following environments are susceptible to a Prototype Pollution attack:\r\n\r\n-   Application server\r\n    \r\n-   Web server\r\n    \r\n\r\n## How to prevent\r\n\r\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\r\n    \r\n2.  Require schema validation of JSON input.\r\n    \r\n3.  Avoid using unsafe recursive merge functions.\r\n    \r\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\r\n    \r\n5.  As a best practice use `Map` instead of `Object`.\r\n\r\n### For more information on this vulnerability type:\r\n\r\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\n\nUpgrade `lodash` to version 4.17.12 or higher.\n\n\n## References\n\n- [Github Issue](https://github.com/lodash/lodash/issues/4348)\n\n- [GitHub PR](https://github.com/lodash/lodash/pull/4336)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1065)\n\n- [Sails Lodash GitHub PR](https://github.com/sailshq/lodash/pull/1)\n\n- [Snyk Blog](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n",
      "disclosureTime": "2019-06-19T11:45:02Z",
      "fixedIn": [
        "4.17.12"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-LODASH-450202",
      "identifiers": {
        "CVE": [
          "CVE-2019-10744"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          1065
        ]
      },
      "language": "js",
      "modificationTime": "2019-07-10T08:12:59.719272Z",
      "moduleName": "lodash",
      "packageManager": "npm",
      "packageName": "lodash",
      "patches": [
        {
          "comments": [],
          "id": "patch:SNYK-JS-LODASH-450202:0",
          "modificationTime": "2019-07-03T13:52:26.362878Z",
          "urls": [
            "https://snyk-rules-pre-repository.s3.amazonaws.com/snapshots/master/patches/npm/lodash/20190702/lodash_20190702_0_0_1f8ea07746963a535385a5befc19fa687a627d2b.patch"
          ],
          "version": "=4.17.11"
        }
      ],
      "publicationTime": "2019-07-02T11:45:01Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/lodash/lodash/issues/4348"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/lodash/lodash/pull/4336"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1065"
        },
        {
          "title": "Sails Lodash GitHub PR",
          "url": "https://github.com/sailshq/lodash/pull/1"
        },
        {
          "title": "Snyk Blog",
          "url": "https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.17.12"
        ]
      },
      "severity": "high",
      "title": "Prototype Pollution",
      "from": [
        "snyk-api@0.0.0-development",
        "@commitlint/cli@7.6.1",
        "lodash@4.17.11"
      ],
      "upgradePath": [
        false,
        "@commitlint/cli@8.1.0",
        "lodash@4.17.14"
      ],
      "isUpgradable": true,
      "isPatchable": true,
      "name": "lodash",
      "version": "4.17.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-06-19T12:04:21.040000Z",
      "credit": [
        "Snyk Security Team"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\n\nAffected versions of this package are vulnerable to Prototype Pollution.\nThe function `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nconst mergeFn = require('lodash').defaultsDeep;\r\nconst payload = '{\"constructor\": {\"prototype\": {\"a0\": true}}}'\r\n\r\nfunction check() {\r\n    mergeFn({}, JSON.parse(payload));\r\n    if (({})[`a0`] === true) {\r\n        console.log(`Vulnerable to Prototype Pollution via ${payload}`);\r\n    }\r\n  }\r\n\r\ncheck();\r\n```\r\n\r\nFor more information, check out our [blog post](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n\n## Details\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\r\n\r\nThere are two main ways in which the pollution of prototypes occurs:\r\n\r\n-   Unsafe `Object` recursive merge\r\n    \r\n-   Property definition by path\r\n    \r\n\r\n### Unsafe Object recursive merge\r\n\r\nThe logic of a vulnerable recursive merge function follows the following high-level model:\r\n```\r\nmerge (target, source)\r\n\r\n  foreach property of source\r\n\r\n    if property exists and is an object on both the target and the source\r\n\r\n      merge(target[property], source[property])\r\n\r\n    else\r\n\r\n      target[property] = source[property]\r\n```\r\n<br>  \r\n\r\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\r\n\r\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\r\n\r\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\r\n\r\n### Property definition by path\r\n\r\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\r\n\r\nIf the attacker can control the value of “path”, they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\r\n\r\n## Types of attacks\r\n\r\nThere are a few methods by which Prototype Pollution can be manipulated:\r\n\r\n| Type |Origin  |Short description |\r\n|--|--|--|\r\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\r\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\r\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\r\n\r\n## Affected environments\r\n\r\nThe following environments are susceptible to a Prototype Pollution attack:\r\n\r\n-   Application server\r\n    \r\n-   Web server\r\n    \r\n\r\n## How to prevent\r\n\r\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\r\n    \r\n2.  Require schema validation of JSON input.\r\n    \r\n3.  Avoid using unsafe recursive merge functions.\r\n    \r\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\r\n    \r\n5.  As a best practice use `Map` instead of `Object`.\r\n\r\n### For more information on this vulnerability type:\r\n\r\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\n\nUpgrade `lodash` to version 4.17.12 or higher.\n\n\n## References\n\n- [Github Issue](https://github.com/lodash/lodash/issues/4348)\n\n- [GitHub PR](https://github.com/lodash/lodash/pull/4336)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1065)\n\n- [Sails Lodash GitHub PR](https://github.com/sailshq/lodash/pull/1)\n\n- [Snyk Blog](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n",
      "disclosureTime": "2019-06-19T11:45:02Z",
      "fixedIn": [
        "4.17.12"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-LODASH-450202",
      "identifiers": {
        "CVE": [
          "CVE-2019-10744"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          1065
        ]
      },
      "language": "js",
      "modificationTime": "2019-07-10T08:12:59.719272Z",
      "moduleName": "lodash",
      "packageManager": "npm",
      "packageName": "lodash",
      "patches": [
        {
          "comments": [],
          "id": "patch:SNYK-JS-LODASH-450202:0",
          "modificationTime": "2019-07-03T13:52:26.362878Z",
          "urls": [
            "https://snyk-rules-pre-repository.s3.amazonaws.com/snapshots/master/patches/npm/lodash/20190702/lodash_20190702_0_0_1f8ea07746963a535385a5befc19fa687a627d2b.patch"
          ],
          "version": "=4.17.11"
        }
      ],
      "publicationTime": "2019-07-02T11:45:01Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/lodash/lodash/issues/4348"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/lodash/lodash/pull/4336"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1065"
        },
        {
          "title": "Sails Lodash GitHub PR",
          "url": "https://github.com/sailshq/lodash/pull/1"
        },
        {
          "title": "Snyk Blog",
          "url": "https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.17.12"
        ]
      },
      "severity": "high",
      "title": "Prototype Pollution",
      "from": [
        "snyk-api@0.0.0-development",
        "@commitlint/cli@7.6.1",
        "@commitlint/lint@7.6.0",
        "lodash@4.17.11"
      ],
      "upgradePath": [
        false,
        "@commitlint/cli@8.0.0",
        "@commitlint/lint@8.1.0",
        "lodash@4.17.14"
      ],
      "isUpgradable": true,
      "isPatchable": true,
      "name": "lodash",
      "version": "4.17.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-06-19T12:04:21.040000Z",
      "credit": [
        "Snyk Security Team"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\n\nAffected versions of this package are vulnerable to Prototype Pollution.\nThe function `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nconst mergeFn = require('lodash').defaultsDeep;\r\nconst payload = '{\"constructor\": {\"prototype\": {\"a0\": true}}}'\r\n\r\nfunction check() {\r\n    mergeFn({}, JSON.parse(payload));\r\n    if (({})[`a0`] === true) {\r\n        console.log(`Vulnerable to Prototype Pollution via ${payload}`);\r\n    }\r\n  }\r\n\r\ncheck();\r\n```\r\n\r\nFor more information, check out our [blog post](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n\n## Details\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\r\n\r\nThere are two main ways in which the pollution of prototypes occurs:\r\n\r\n-   Unsafe `Object` recursive merge\r\n    \r\n-   Property definition by path\r\n    \r\n\r\n### Unsafe Object recursive merge\r\n\r\nThe logic of a vulnerable recursive merge function follows the following high-level model:\r\n```\r\nmerge (target, source)\r\n\r\n  foreach property of source\r\n\r\n    if property exists and is an object on both the target and the source\r\n\r\n      merge(target[property], source[property])\r\n\r\n    else\r\n\r\n      target[property] = source[property]\r\n```\r\n<br>  \r\n\r\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\r\n\r\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\r\n\r\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\r\n\r\n### Property definition by path\r\n\r\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\r\n\r\nIf the attacker can control the value of “path”, they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\r\n\r\n## Types of attacks\r\n\r\nThere are a few methods by which Prototype Pollution can be manipulated:\r\n\r\n| Type |Origin  |Short description |\r\n|--|--|--|\r\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\r\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\r\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\r\n\r\n## Affected environments\r\n\r\nThe following environments are susceptible to a Prototype Pollution attack:\r\n\r\n-   Application server\r\n    \r\n-   Web server\r\n    \r\n\r\n## How to prevent\r\n\r\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\r\n    \r\n2.  Require schema validation of JSON input.\r\n    \r\n3.  Avoid using unsafe recursive merge functions.\r\n    \r\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\r\n    \r\n5.  As a best practice use `Map` instead of `Object`.\r\n\r\n### For more information on this vulnerability type:\r\n\r\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\n\nUpgrade `lodash` to version 4.17.12 or higher.\n\n\n## References\n\n- [Github Issue](https://github.com/lodash/lodash/issues/4348)\n\n- [GitHub PR](https://github.com/lodash/lodash/pull/4336)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1065)\n\n- [Sails Lodash GitHub PR](https://github.com/sailshq/lodash/pull/1)\n\n- [Snyk Blog](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n",
      "disclosureTime": "2019-06-19T11:45:02Z",
      "fixedIn": [
        "4.17.12"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-LODASH-450202",
      "identifiers": {
        "CVE": [
          "CVE-2019-10744"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          1065
        ]
      },
      "language": "js",
      "modificationTime": "2019-07-10T08:12:59.719272Z",
      "moduleName": "lodash",
      "packageManager": "npm",
      "packageName": "lodash",
      "patches": [
        {
          "comments": [],
          "id": "patch:SNYK-JS-LODASH-450202:0",
          "modificationTime": "2019-07-03T13:52:26.362878Z",
          "urls": [
            "https://snyk-rules-pre-repository.s3.amazonaws.com/snapshots/master/patches/npm/lodash/20190702/lodash_20190702_0_0_1f8ea07746963a535385a5befc19fa687a627d2b.patch"
          ],
          "version": "=4.17.11"
        }
      ],
      "publicationTime": "2019-07-02T11:45:01Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/lodash/lodash/issues/4348"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/lodash/lodash/pull/4336"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1065"
        },
        {
          "title": "Sails Lodash GitHub PR",
          "url": "https://github.com/sailshq/lodash/pull/1"
        },
        {
          "title": "Snyk Blog",
          "url": "https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.17.12"
        ]
      },
      "severity": "high",
      "title": "Prototype Pollution",
      "from": [
        "snyk-api@0.0.0-development",
        "@commitlint/cli@7.6.1",
        "@commitlint/load@7.6.2",
        "lodash@4.17.11"
      ],
      "upgradePath": [
        false,
        "@commitlint/cli@8.0.0",
        "@commitlint/load@8.1.0",
        "lodash@4.17.14"
      ],
      "isUpgradable": true,
      "isPatchable": true,
      "name": "lodash",
      "version": "4.17.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-06-19T12:04:21.040000Z",
      "credit": [
        "Snyk Security Team"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\n\nAffected versions of this package are vulnerable to Prototype Pollution.\nThe function `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nconst mergeFn = require('lodash').defaultsDeep;\r\nconst payload = '{\"constructor\": {\"prototype\": {\"a0\": true}}}'\r\n\r\nfunction check() {\r\n    mergeFn({}, JSON.parse(payload));\r\n    if (({})[`a0`] === true) {\r\n        console.log(`Vulnerable to Prototype Pollution via ${payload}`);\r\n    }\r\n  }\r\n\r\ncheck();\r\n```\r\n\r\nFor more information, check out our [blog post](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n\n## Details\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\r\n\r\nThere are two main ways in which the pollution of prototypes occurs:\r\n\r\n-   Unsafe `Object` recursive merge\r\n    \r\n-   Property definition by path\r\n    \r\n\r\n### Unsafe Object recursive merge\r\n\r\nThe logic of a vulnerable recursive merge function follows the following high-level model:\r\n```\r\nmerge (target, source)\r\n\r\n  foreach property of source\r\n\r\n    if property exists and is an object on both the target and the source\r\n\r\n      merge(target[property], source[property])\r\n\r\n    else\r\n\r\n      target[property] = source[property]\r\n```\r\n<br>  \r\n\r\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\r\n\r\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\r\n\r\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\r\n\r\n### Property definition by path\r\n\r\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\r\n\r\nIf the attacker can control the value of “path”, they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\r\n\r\n## Types of attacks\r\n\r\nThere are a few methods by which Prototype Pollution can be manipulated:\r\n\r\n| Type |Origin  |Short description |\r\n|--|--|--|\r\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\r\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\r\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\r\n\r\n## Affected environments\r\n\r\nThe following environments are susceptible to a Prototype Pollution attack:\r\n\r\n-   Application server\r\n    \r\n-   Web server\r\n    \r\n\r\n## How to prevent\r\n\r\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\r\n    \r\n2.  Require schema validation of JSON input.\r\n    \r\n3.  Avoid using unsafe recursive merge functions.\r\n    \r\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\r\n    \r\n5.  As a best practice use `Map` instead of `Object`.\r\n\r\n### For more information on this vulnerability type:\r\n\r\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\n\nUpgrade `lodash` to version 4.17.12 or higher.\n\n\n## References\n\n- [Github Issue](https://github.com/lodash/lodash/issues/4348)\n\n- [GitHub PR](https://github.com/lodash/lodash/pull/4336)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1065)\n\n- [Sails Lodash GitHub PR](https://github.com/sailshq/lodash/pull/1)\n\n- [Snyk Blog](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n",
      "disclosureTime": "2019-06-19T11:45:02Z",
      "fixedIn": [
        "4.17.12"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-LODASH-450202",
      "identifiers": {
        "CVE": [
          "CVE-2019-10744"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          1065
        ]
      },
      "language": "js",
      "modificationTime": "2019-07-10T08:12:59.719272Z",
      "moduleName": "lodash",
      "packageManager": "npm",
      "packageName": "lodash",
      "patches": [
        {
          "comments": [],
          "id": "patch:SNYK-JS-LODASH-450202:0",
          "modificationTime": "2019-07-03T13:52:26.362878Z",
          "urls": [
            "https://snyk-rules-pre-repository.s3.amazonaws.com/snapshots/master/patches/npm/lodash/20190702/lodash_20190702_0_0_1f8ea07746963a535385a5befc19fa687a627d2b.patch"
          ],
          "version": "=4.17.11"
        }
      ],
      "publicationTime": "2019-07-02T11:45:01Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/lodash/lodash/issues/4348"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/lodash/lodash/pull/4336"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1065"
        },
        {
          "title": "Sails Lodash GitHub PR",
          "url": "https://github.com/sailshq/lodash/pull/1"
        },
        {
          "title": "Snyk Blog",
          "url": "https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.17.12"
        ]
      },
      "severity": "high",
      "title": "Prototype Pollution",
      "from": [
        "snyk-api@0.0.0-development",
        "@commitlint/cli@7.6.1",
        "@commitlint/load@7.6.2",
        "@commitlint/resolve-extends@7.6.0",
        "lodash@4.17.11"
      ],
      "upgradePath": [
        false,
        "@commitlint/cli@8.0.0",
        "@commitlint/load@8.0.0",
        "@commitlint/resolve-extends@8.1.0",
        "lodash@4.17.14"
      ],
      "isUpgradable": true,
      "isPatchable": true,
      "name": "lodash",
      "version": "4.17.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2019-06-19T12:04:21.040000Z",
      "credit": [
        "Snyk Security Team"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n\n[lodash](https://www.npmjs.com/package/lodash) is a modern JavaScript utility library delivering modularity, performance, & extras.\n\n\nAffected versions of this package are vulnerable to Prototype Pollution.\nThe function `defaultsDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.\r\n\r\n## PoC by Snyk\r\n```\r\nconst mergeFn = require('lodash').defaultsDeep;\r\nconst payload = '{\"constructor\": {\"prototype\": {\"a0\": true}}}'\r\n\r\nfunction check() {\r\n    mergeFn({}, JSON.parse(payload));\r\n    if (({})[`a0`] === true) {\r\n        console.log(`Vulnerable to Prototype Pollution via ${payload}`);\r\n    }\r\n  }\r\n\r\ncheck();\r\n```\r\n\r\nFor more information, check out our [blog post](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n\n## Details\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\r\n\r\nThere are two main ways in which the pollution of prototypes occurs:\r\n\r\n-   Unsafe `Object` recursive merge\r\n    \r\n-   Property definition by path\r\n    \r\n\r\n### Unsafe Object recursive merge\r\n\r\nThe logic of a vulnerable recursive merge function follows the following high-level model:\r\n```\r\nmerge (target, source)\r\n\r\n  foreach property of source\r\n\r\n    if property exists and is an object on both the target and the source\r\n\r\n      merge(target[property], source[property])\r\n\r\n    else\r\n\r\n      target[property] = source[property]\r\n```\r\n<br>  \r\n\r\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\r\n\r\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\r\n\r\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\r\n\r\n### Property definition by path\r\n\r\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\r\n\r\nIf the attacker can control the value of “path”, they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\r\n\r\n## Types of attacks\r\n\r\nThere are a few methods by which Prototype Pollution can be manipulated:\r\n\r\n| Type |Origin  |Short description |\r\n|--|--|--|\r\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\r\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\r\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\r\n\r\n## Affected environments\r\n\r\nThe following environments are susceptible to a Prototype Pollution attack:\r\n\r\n-   Application server\r\n    \r\n-   Web server\r\n    \r\n\r\n## How to prevent\r\n\r\n1.  Freeze the prototype— use `Object.freeze (Object.prototype)`.\r\n    \r\n2.  Require schema validation of JSON input.\r\n    \r\n3.  Avoid using unsafe recursive merge functions.\r\n    \r\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\r\n    \r\n5.  As a best practice use `Map` instead of `Object`.\r\n\r\n### For more information on this vulnerability type:\r\n\r\n[Arteau, Oliver. “JavaScript prototype pollution attack in NodeJS application.” GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)\n\n## Remediation\n\nUpgrade `lodash` to version 4.17.12 or higher.\n\n\n## References\n\n- [Github Issue](https://github.com/lodash/lodash/issues/4348)\n\n- [GitHub PR](https://github.com/lodash/lodash/pull/4336)\n\n- [Node Security Advisory](https://www.npmjs.com/advisories/1065)\n\n- [Sails Lodash GitHub PR](https://github.com/sailshq/lodash/pull/1)\n\n- [Snyk Blog](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/)\n",
      "disclosureTime": "2019-06-19T11:45:02Z",
      "fixedIn": [
        "4.17.12"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JS-LODASH-450202",
      "identifiers": {
        "CVE": [
          "CVE-2019-10744"
        ],
        "CWE": [
          "CWE-400"
        ],
        "NSP": [
          1065
        ]
      },
      "language": "js",
      "modificationTime": "2019-07-10T08:12:59.719272Z",
      "moduleName": "lodash",
      "packageManager": "npm",
      "packageName": "lodash",
      "patches": [
        {
          "comments": [],
          "id": "patch:SNYK-JS-LODASH-450202:0",
          "modificationTime": "2019-07-03T13:52:26.362878Z",
          "urls": [
            "https://snyk-rules-pre-repository.s3.amazonaws.com/snapshots/master/patches/npm/lodash/20190702/lodash_20190702_0_0_1f8ea07746963a535385a5befc19fa687a627d2b.patch"
          ],
          "version": "=4.17.11"
        }
      ],
      "publicationTime": "2019-07-02T11:45:01Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/lodash/lodash/issues/4348"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/lodash/lodash/pull/4336"
        },
        {
          "title": "Node Security Advisory",
          "url": "https://www.npmjs.com/advisories/1065"
        },
        {
          "title": "Sails Lodash GitHub PR",
          "url": "https://github.com/sailshq/lodash/pull/1"
        },
        {
          "title": "Snyk Blog",
          "url": "https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.17.12"
        ]
      },
      "severity": "high",
      "title": "Prototype Pollution",
      "from": [
        "snyk-api@0.0.0-development",
        "@commitlint/cli@7.6.1",
        "@commitlint/lint@7.6.0",
        "@commitlint/rules@7.6.0",
        "@commitlint/ensure@7.6.0",
        "lodash@4.17.11"
      ],
      "upgradePath": [
        false,
        "@commitlint/cli@8.0.0",
        "@commitlint/lint@8.0.0",
        "@commitlint/rules@8.0.0",
        "@commitlint/ensure@8.1.0",
        "lodash@4.17.14"
      ],
      "isUpgradable": true,
      "isPatchable": true,
      "name": "lodash",
      "version": "4.17.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [
        "SNYK-JS-MEM-11138"
      ],
      "creationTime": "2018-01-17T18:19:13Z",
      "credit": [
        "juancampa"
      ],
      "cvssScore": 5.1,
      "description": "## Overview\n \n[mem](https://www.npmjs.com/package/mem) is an optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nOld results were deleted from the cache and could cause a memory leak.\n\n## details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## Remediation\n\nUpgrade mem to version 4.0.0 or higher.\n\n\n## References\n\n- [Github Commit](https://github.com/sindresorhus/mem/commit/da4e4398cb27b602de3bd55f746efa9b4a31702b)\n\n- [GitHub Issue](https://github.com/sindresorhus/mem/issues/14)\n",
      "disclosureTime": "2018-01-17T18:19:13Z",
      "fixedIn": [
        "4.0.0"
      ],
      "functions": [
        {
          "functionId": {
            "className": null,
            "filePath": "index.js",
            "functionName": "module.exports.memoized"
          },
          "version": [
            "<=1.1.0"
          ]
        },
        {
          "functionId": {
            "className": null,
            "filePath": "index.js",
            "functionName": "module.exports.memoized.setData"
          },
          "version": [
            ">1.1.0<4.0.0"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.memoized"
          },
          "version": [
            "<=1.1.0"
          ]
        },
        {
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.memoized.setData"
          },
          "version": [
            ">1.1.0<4.0.0"
          ]
        }
      ],
      "id": "npm:mem:20180117",
      "identifiers": {
        "ALTERNATIVE": [
          "SNYK-JS-MEM-11138"
        ],
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "language": "js",
      "modificationTime": "2019-02-18T11:51:56.754978Z",
      "moduleName": "mem",
      "packageManager": "npm",
      "packageName": "mem",
      "patches": [],
      "publicationTime": "2018-08-29T11:23:09Z",
      "references": [
        {
          "title": "Github Commit",
          "url": "https://github.com/sindresorhus/mem/commit/da4e4398cb27b602de3bd55f746efa9b4a31702b"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/sindresorhus/mem/issues/14"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.0.0"
        ]
      },
      "severity": "medium",
      "title": "Denial of Service (DoS)",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpx@10.2.0",
        "yargs@11.1.0",
        "os-locale@2.1.0",
        "mem@1.1.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "mem",
      "version": "1.1.0"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [
        "SNYK-JS-MEM-11138"
      ],
      "creationTime": "2018-01-17T18:19:13Z",
      "credit": [
        "juancampa"
      ],
      "cvssScore": 5.1,
      "description": "## Overview\n \n[mem](https://www.npmjs.com/package/mem) is an optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nOld results were deleted from the cache and could cause a memory leak.\n\n## details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## Remediation\n\nUpgrade mem to version 4.0.0 or higher.\n\n\n## References\n\n- [Github Commit](https://github.com/sindresorhus/mem/commit/da4e4398cb27b602de3bd55f746efa9b4a31702b)\n\n- [GitHub Issue](https://github.com/sindresorhus/mem/issues/14)\n",
      "disclosureTime": "2018-01-17T18:19:13Z",
      "fixedIn": [
        "4.0.0"
      ],
      "functions": [
        {
          "functionId": {
            "className": null,
            "filePath": "index.js",
            "functionName": "module.exports.memoized"
          },
          "version": [
            "<=1.1.0"
          ]
        },
        {
          "functionId": {
            "className": null,
            "filePath": "index.js",
            "functionName": "module.exports.memoized.setData"
          },
          "version": [
            ">1.1.0<4.0.0"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.memoized"
          },
          "version": [
            "<=1.1.0"
          ]
        },
        {
          "functionId": {
            "filePath": "index.js",
            "functionName": "module.exports.memoized.setData"
          },
          "version": [
            ">1.1.0<4.0.0"
          ]
        }
      ],
      "id": "npm:mem:20180117",
      "identifiers": {
        "ALTERNATIVE": [
          "SNYK-JS-MEM-11138"
        ],
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "language": "js",
      "modificationTime": "2019-02-18T11:51:56.754978Z",
      "moduleName": "mem",
      "packageManager": "npm",
      "packageName": "mem",
      "patches": [],
      "publicationTime": "2018-08-29T11:23:09Z",
      "references": [
        {
          "title": "Github Commit",
          "url": "https://github.com/sindresorhus/mem/commit/da4e4398cb27b602de3bd55f746efa9b4a31702b"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/sindresorhus/mem/issues/14"
        }
      ],
      "semver": {
        "vulnerable": [
          "<4.0.0"
        ]
      },
      "severity": "medium",
      "title": "Denial of Service (DoS)",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpx@10.2.0",
        "yargs@11.1.0",
        "os-locale@2.1.0",
        "mem@1.1.0"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "mem",
      "version": "1.1.0"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:bin-links:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "bin-links",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:41:27.337Z",
      "creationTime": "2019-06-11T17:41:27.337Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "bin-links@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "bin-links",
      "version": "1.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:bin-links:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "bin-links",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:41:27.337Z",
      "creationTime": "2019-06-11T17:41:27.337Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libcipm@4.0.0",
        "bin-links@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "bin-links",
      "version": "1.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:bin-links:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "bin-links",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:41:27.337Z",
      "creationTime": "2019-06-11T17:41:27.337Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpm@3.0.1",
        "bin-links@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "bin-links",
      "version": "1.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:bin-links:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "bin-links",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:41:27.337Z",
      "creationTime": "2019-06-11T17:41:27.337Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "bin-links@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "bin-links",
      "version": "1.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:bin-links:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "bin-links",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:41:27.337Z",
      "creationTime": "2019-06-11T17:41:27.337Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libcipm@4.0.0",
        "bin-links@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "bin-links",
      "version": "1.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:bin-links:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "bin-links",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:41:27.337Z",
      "creationTime": "2019-06-11T17:41:27.337Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpm@3.0.1",
        "bin-links@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "bin-links",
      "version": "1.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "bin-links@1.1.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libcipm@4.0.0",
        "bin-links@1.1.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpm@3.0.1",
        "bin-links@1.1.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "bin-links@1.1.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libcipm@4.0.0",
        "bin-links@1.1.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=0"
        ]
      },
      "id": "snyk:lic:npm:gentle-fs:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "gentle-fs",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T17:52:59.916Z",
      "creationTime": "2019-06-11T17:52:59.916Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpm@3.0.1",
        "bin-links@1.1.2",
        "gentle-fs@2.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "gentle-fs",
      "version": "2.0.1"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.0.1"
        ]
      },
      "id": "snyk:lic:npm:npm-lifecycle:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm-lifecycle",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:09.766Z",
      "creationTime": "2019-06-11T18:06:09.766Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "npm-lifecycle@3.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm-lifecycle",
      "version": "3.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.0.1"
        ]
      },
      "id": "snyk:lic:npm:npm-lifecycle:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm-lifecycle",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:09.766Z",
      "creationTime": "2019-06-11T18:06:09.766Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libcipm@4.0.0",
        "npm-lifecycle@3.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm-lifecycle",
      "version": "3.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.0.1"
        ]
      },
      "id": "snyk:lic:npm:npm-lifecycle:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm-lifecycle",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:09.766Z",
      "creationTime": "2019-06-11T18:06:09.766Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpm@3.0.1",
        "npm-lifecycle@3.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm-lifecycle",
      "version": "3.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.0.1"
        ]
      },
      "id": "snyk:lic:npm:npm-lifecycle:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm-lifecycle",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:09.766Z",
      "creationTime": "2019-06-11T18:06:09.766Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "npm-lifecycle@3.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm-lifecycle",
      "version": "3.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.0.1"
        ]
      },
      "id": "snyk:lic:npm:npm-lifecycle:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm-lifecycle",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:09.766Z",
      "creationTime": "2019-06-11T18:06:09.766Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libcipm@4.0.0",
        "npm-lifecycle@3.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm-lifecycle",
      "version": "3.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.0.1"
        ]
      },
      "id": "snyk:lic:npm:npm-lifecycle:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm-lifecycle",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:09.766Z",
      "creationTime": "2019-06-11T18:06:09.766Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2",
        "libnpm@3.0.1",
        "npm-lifecycle@3.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm-lifecycle",
      "version": "3.1.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.3.6"
        ]
      },
      "id": "snyk:lic:npm:npm:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:04.694Z",
      "creationTime": "2019-06-11T18:06:04.694Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm",
      "version": "6.10.2"
    },
    {
      "license": "Artistic-2.0",
      "semver": {
        "vulnerable": [
          ">=1.3.6"
        ]
      },
      "id": "snyk:lic:npm:npm:Artistic-2.0",
      "type": "license",
      "packageManager": "npm",
      "language": "js",
      "packageName": "npm",
      "title": "Artistic-2.0 license",
      "description": "Artistic-2.0 license",
      "publicationTime": "2019-06-11T18:06:04.694Z",
      "creationTime": "2019-06-11T18:06:04.694Z",
      "patches": [],
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/Artistic-2.0.txt",
      "severity": "medium",
      "from": [
        "snyk-api@0.0.0-development",
        "semantic-release@15.13.19",
        "@semantic-release/npm@5.1.13",
        "npm@6.10.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "npm",
      "version": "6.10.2"
    }
  ],
  "ok": false,
  "dependencyCount": 1128,
  "org": "snyk-demo-567",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.13.5\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {
      "AGPL-1.0": "high",
      "AGPL-3.0": "high",
      "Artistic-1.0": "medium",
      "Artistic-2.0": "medium",
      "CDDL-1.0": "medium",
      "CPOL-1.02": "high",
      "EPL-1.0": "medium",
      "GPL-2.0": "high",
      "GPL-3.0": "high",
      "LGPL-2.0": "medium",
      "LGPL-2.1": "medium",
      "LGPL-2.1+": "medium",
      "LGPL-3.0": "medium",
      "LGPL-3.0+": "medium",
      "MPL-1.1": "medium",
      "MPL-2.0": "medium",
      "MS-RL": "medium",
      "SimPL-2.0": "high"
    },
    "orgLicenseRules": {
      "AGPL-1.0": {
        "severity": "high",
        "instructions": ""
      },
      "AGPL-3.0": {
        "severity": "high",
        "instructions": ""
      },
      "Artistic-1.0": {
        "severity": "medium",
        "instructions": ""
      },
      "Artistic-2.0": {
        "severity": "medium",
        "instructions": ""
      },
      "CDDL-1.0": {
        "severity": "medium",
        "instructions": ""
      },
      "CPOL-1.02": {
        "severity": "high",
        "instructions": ""
      },
      "EPL-1.0": {
        "severity": "medium",
        "instructions": ""
      },
      "GPL-2.0": {
        "severity": "high",
        "instructions": ""
      },
      "GPL-3.0": {
        "severity": "high",
        "instructions": ""
      },
      "LGPL-2.0": {
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1": {
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1+": {
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0": {
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0+": {
        "severity": "medium",
        "instructions": ""
      },
      "MPL-1.1": {
        "severity": "medium",
        "instructions": ""
      },
      "MPL-2.0": {
        "severity": "medium",
        "instructions": ""
      },
      "MS-RL": {
        "severity": "medium",
        "instructions": ""
      },
      "SimPL-2.0": {
        "severity": "high",
        "instructions": ""
      }
    }
  },
  "packageManager": "yarn",
  "ignoreSettings": null,
  "summary": "33 vulnerable dependency paths",
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 7,
  "path": "/Users/lirantal/projects/repos/snyk/snyk-api"
}
